AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-lambda-python-microservice

  Sample SAM Template for aws-lambda-python-microservice

Parameters:
  ParentVPCStack:
    Type: String
    Description: Enter network stack name

Globals:
  Function:
    Timeout: 5

Resources:

  DataBucket:
    Type: AWS::S3::Bucket

  DocumentLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Redis + Lambda on SAM Security Group"
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${ParentVPCStack}-VPC"
#      SecurityGroupEgress:
#        - CidrIp: "0.0.0.0/0"
#          FromPort: 0
#          ToPort: 65535
#          IpProtocol: tcp
#      SecurityGroupIngress:
#        - CidrIp: "0.0.0.0/0"
#          FromPort: 0
#          ToPort: 65535
#          IpProtocol: tcp

  DocumentServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          BUCKET_NAME: !Ref DataBucket
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref DataBucket
      VpcConfig:
        SecurityGroupIds:
          - !Ref DocumentLambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue:
              Fn::Sub: "${ParentVPCStack}-PublicSubnet1"
          - Fn::ImportValue:
              Fn::Sub: "${ParentVPCStack}-PublicSubnet2"
      Events:
        GetDocument:
          Type: Api
          Properties:
            Path: /document
            Method: get

  DataBucketName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/document/s3/data-bucket/S3bucket"
      Type: "String"
      Value: !Ref DataBucket
      Description: "S3 Data Bucket Name"

  EndpointS3:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      RouteTableIds: !Split [',', !Join [',', [{'Fn::ImportValue': !Sub '${ParentVPCStack}-RouteTablesPublic'}]]]
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'}

Outputs:
  DocumentStoreApi:
    Description: "API Gateway endpoint URL for Prod stage for Document Store Service"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/document/"
